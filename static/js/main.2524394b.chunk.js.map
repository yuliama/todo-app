{"version":3,"sources":["model/TodoModel.js","components/header/header.js","components/addNewTodo/addNewTodo.js","components/toDoItem/toDoItem.js","components/toDoList/toDoList.js","components/actions/actions.js","App.js","reportWebVitals.js","index.js"],"names":["TodoModel","id","isCompleted","text","React","Component","Header","AddNewTodo","onKeyDown","useState","todo","setTodo","className","type","value","placeholder","onChange","e","target","key","ToDoItem","item","onDelete","showDeleteIcon","setshowDeleteIcon","deleteIcon","onClick","addDeleteIcon","showIcon","onMouseEnter","onMouseLeave","checked","htmlFor","ToDoList","list","todoList","map","Actions","activeTodosNumber","visibilityClassName","filter","setFilter","onChangeFilter","customStyles","content","top","left","right","bottom","marginRight","transform","App","setTodoList","latestTodoCount","setLatestTodoCount","filterBy","setFilterBy","modalIsOpen","setIsOpen","itemToDelete","setItemToDelete","activeTodoCount","length","deleteItem","finalDeleteItem","newList","listItem","console","log","closeModal","isApproved","count","concat","addNewTodo","completed","changeCheckTodoItem","isOpen","onRequestClose","style","contentLabel","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oVAEqBA,E,kDACjB,WAAYC,EAAIC,EAAaC,GAAO,IAAD,8BAC/B,cAAMF,EAAIC,EAAaC,IAClBF,GAAKA,EACV,EAAKC,YAAcA,EACnB,EAAKC,KAAOA,EAJmB,E,UADAC,IAAMC,W,OCF9B,SAASC,IACpB,OACI,8BACI,yC,MCAG,SAASC,EAAT,GAAoC,IAAdC,EAAa,EAAbA,UACjC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACI,qBAAKC,UAAU,aAAf,SACI,uBAAOC,KAAK,OAAOC,MAAOJ,EAAMK,YAAY,eAAeC,SAAU,SAAAC,GAAC,OAAIN,EAAQM,EAAEC,OAAOJ,QAAQN,UAAW,SAAAS,GAC1G,GAAa,SAATA,EAAEE,KAAkBT,EAAM,CAC1B,IAAII,EAAQJ,EAEZ,OADAC,EAAQ,IACDH,EAAUM,S,MCRtB,SAASM,EAAT,GAAiD,IAA7BC,EAA4B,EAA5BA,KAAML,EAAsB,EAAtBA,SAAUM,EAAY,EAAZA,SAC/C,EAA4Cb,mBAAS,QAArD,mBAAOc,EAAP,KAAuBC,EAAvB,KAEIC,EAAa,uBAAOb,UAAWW,EAAiB,cAAeG,QAAS,kBAAMJ,EAASD,IAAOR,KAAK,WAEvG,SAASc,EAAcC,GACRJ,EAAXI,EAA6B,OAA4B,QAG7D,OACI,sBAAKhB,UAAU,OAAOiB,aAAc,kBAAMF,GAAc,IAAOG,aAAc,kBAAMH,GAAc,IAAjG,UACI,uBAAO1B,GAAI,OAASoB,EAAKpB,GAAIY,KAAK,WAAWkB,QAASV,EAAKnB,YAAac,SAAU,kBAAMA,EAASK,MACjG,uBAAOW,QAAS,OAASX,EAAKpB,GAAIW,UAAWS,EAAKnB,YAAc,YAAc,GAA9E,SAAmFmB,EAAKlB,OACvFsB,K,MCbE,SAASQ,EAAT,GAAiD,IAA7BC,EAA4B,EAA5BA,KAAMlB,EAAsB,EAAtBA,SAAUM,EAAY,EAAZA,SAC3Ca,EAAWD,EAAKE,KAAI,SAAAf,GACpB,OAAO,cAACD,EAAD,CAAUC,KAAMA,EAAML,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIK,SAAU,SAAAL,GAAC,OAAIK,EAASL,SAErF,OACI,qBAAKL,UAAU,OAAf,SACKuB,I,MCNE,SAASE,EAAT,GAAuE,IAApDC,EAAmD,EAAnDA,kBAAmBC,EAAgC,EAAhCA,oBAAqBb,EAAW,EAAXA,QACtE,EAA4BjB,mBAAS,OAArC,mBAAO+B,EAAP,KAAeC,EAAf,KAEA,SAASC,EAAerB,GAEpB,OADAoB,EAAUpB,GACHK,EAAQL,GAEnB,OACI,sBAAKT,UAAW2B,EAAsB,kBAAtC,UACKD,EADL,cAEI,sBAAK1B,UAAU,gBAAf,UACI,uBAAOC,KAAK,SAASD,UAAsB,QAAX4B,EAAmB,SAAW,GAAId,QAAS,kBAAMgB,EAAe,QAAQ5B,MAAM,QAC9G,uBAAOD,KAAK,SAASD,UAAsB,WAAX4B,EAAsB,SAAW,GAAId,QAAS,kBAAMgB,EAAe,WAAW5B,MAAM,WACpH,uBAAOD,KAAK,SAASD,UAAsB,cAAX4B,EAAyB,SAAW,GAAId,QAAS,kBAAMgB,EAAe,cAAc5B,MAAM,oB,WCJpI6B,G,MAAe,CACnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,2BAmFAC,MA/Ef,WACE,MAAgC1C,mBAAS,IAAzC,mBAAO0B,EAAP,KAAiBiB,EAAjB,KACA,EAA8C3C,mBAAS,GAAvD,mBAAO4C,EAAP,KAAwBC,EAAxB,KACA,EAAgC7C,mBAAS,OAAzC,mBAAO8C,EAAP,KAAiBC,EAAjB,KACA,EAAiC/C,oBAAS,GAA1C,mBAAOgD,EAAP,KAAoBC,EAApB,KACA,EAAwCjD,mBAAS,IAAjD,mBAAOkD,EAAP,KAAqBC,EAArB,KAEIC,EAAkB1B,EAASK,QAAO,SAAAvB,GAAC,OAAKA,EAAEf,eAAa4D,OAEvDvB,EAAsBJ,EAAS2B,OAAS,OAAS,OAuBrD,SAASC,EAAW1C,GACbA,EAAKnB,YAKR8D,EAAgB3C,IAJhBuC,EAAgBvC,GAelBqC,GAAU,IARZ,SAASM,EAAgB3C,GACvB,IACI4C,EADI,YAAO9B,GACIK,QAAO,SAAA0B,GAAc,OAAOA,EAASjE,IAAMoB,EAAKpB,MACnEmD,EAAYa,GAEZE,QAAQC,IAAI,mBAAoBH,GAMlC,SAASI,EAAWC,GAClBZ,GAAU,GACNY,GAAcX,IAChBK,EAAgBL,GAChBC,EAAgB,KAIpB,OACE,sBAAKhD,UAAU,MAAf,UACE,cAACN,EAAD,IACA,cAACC,EAAD,CAAYC,UAAW,SAAAS,GAAC,OApD5B,SAAoBA,GAClB,IAAIsD,EAAQlB,EAAkB,EAC9BC,EAAmBiB,GAEnBnB,EAAYjB,EAASqC,OAAO,IAAIxE,EAAUuE,GAAO,EAAOtD,KAgD1BwD,CAAWxD,MACvC,cAACgB,EAAD,CAAUC,KAAmB,QAAbqB,EAAqBpB,EACtB,WAAboB,EAAwBpB,EAASK,QAAO,SAAAnB,GAAI,OAAKA,EAAKnB,eAAeiC,EAASK,QAAO,SAAAnB,GAAI,OAAIA,EAAKnB,eAClGc,SAAU,SAAAK,GAAI,OAhDpB,SAA6BA,GAC3B,IACI4C,EADI,YAAO9B,GACIC,KAAI,SAAA8B,GACrB,GAAIA,EAASjE,KAAOoB,EAAKpB,GAAI,CAC3B,IAAIyE,GAAaR,EAAShE,YAC1BgE,EAAShE,YAAcwE,EAEzB,OAAOR,KAETd,EAAYa,GAEZE,QAAQC,IAAI,4BAA6BH,GAqCnBU,CAAoBtD,IAAOC,SAAU,SAAAD,GAAI,OAAI0C,EAAW1C,IAAOkC,SAAUA,IAC7F,eAAC,IAAD,CAAOqB,OAAQnB,EAAaoB,eAAgBR,EAAYS,MAAOnC,EAAcoC,aAAa,gBAA1F,UACE,qBAAInE,UAAU,mBAAd,4DAAgF,uBAAhF,+BACA,sBAAKA,UAAU,WAAf,UACE,cAACoE,EAAA,EAAD,CAAQtD,QAAS,kBAAM2C,GAAW,IAAlC,iBACA,cAACW,EAAA,EAAD,CAAQtD,QAAS,kBAAM2C,GAAW,IAAlC,0BAGJ,cAAChC,EAAD,CAASC,kBAAmBuB,EAAiBtB,oBAAqBA,EAAqBb,QAAS,SAACL,GAAD,OAAUmC,EAAYnC,UCrF7G4D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2524394b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class TodoModel extends React.Component{\r\n    constructor(id, isCompleted, text) {\r\n        super(id, isCompleted, text);\r\n        this.id = id;\r\n        this.isCompleted = isCompleted;\r\n        this.text = text;\r\n    }\r\n}","export default function Header(){\r\n    return (\r\n        <nav>\r\n            <h1>Todos</h1>\r\n        </nav>\r\n    )\r\n}","import './addNewTodo.css';\r\nimport { useState } from \"react\";\r\n\r\nexport default function AddNewTodo({ onKeyDown }) {\r\n    const [todo, setTodo] = useState('');\r\n    return (\r\n        <div className=\"addNewTodo\">\r\n            <input type=\"text\" value={todo} placeholder=\"What's next?\" onChange={e => setTodo(e.target.value)} onKeyDown={e => {\r\n                if (e.key == \"Enter\" && todo) {\r\n                    let value = todo;\r\n                    setTodo('');\r\n                    return onKeyDown(value);\r\n                }\r\n            }}></input>\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport './toDoItem.css'\r\n\r\nexport default function ToDoItem({ item, onChange, onDelete }) {\r\n    const [showDeleteIcon, setshowDeleteIcon] = useState('hide');\r\n\r\n    let deleteIcon = <input className={showDeleteIcon + ' deleteIcon'} onClick={() => onDelete(item)} type=\"button\" ></input >\r\n\r\n    function addDeleteIcon(showIcon) {\r\n        showIcon ? setshowDeleteIcon('show') : setshowDeleteIcon('hide');\r\n    }\r\n\r\n    return (\r\n        <div className=\"item\" onMouseEnter={() => addDeleteIcon(true)} onMouseLeave={() => addDeleteIcon(false)}>\r\n            <input id={'todo' + item.id} type=\"checkbox\" checked={item.isCompleted} onChange={() => onChange(item)}></input>\r\n            <label htmlFor={'todo' + item.id} className={item.isCompleted ? 'completed' : ''}>{item.text}</label>\r\n            {deleteIcon}\r\n        </div>\r\n    )\r\n}","import ToDoItem from '../toDoItem/toDoItem';\r\nimport './toDoList.css'\r\n\r\nexport default function ToDoList({ list, onChange, onDelete }) {\r\n    let todoList = list.map(item => {\r\n        return <ToDoItem item={item} onChange={e => onChange(e)} onDelete={e => onDelete(e)}></ToDoItem>\r\n    })\r\n    return (\r\n        <div className=\"list\">\r\n            {todoList}\r\n        </div>\r\n    )\r\n}","import { useState } from 'react'\r\nimport './actions.css'\r\n\r\nexport default function Actions({ activeTodosNumber, visibilityClassName, onClick }) {\r\n    const [filter, setFilter] = useState('All');\r\n\r\n    function onChangeFilter(item) {\r\n        setFilter(item);\r\n        return onClick(item);\r\n    }\r\n    return (\r\n        <div className={visibilityClassName + \" actionsSection\"}>\r\n            {activeTodosNumber} items left\r\n            <div className=\"filterActions\">\r\n                <input type=\"button\" className={filter === \"All\" ? 'active' : ''} onClick={() => onChangeFilter(\"All\")} value=\"All\"></input>\r\n                <input type=\"button\" className={filter === \"Active\" ? 'active' : ''} onClick={() => onChangeFilter(\"Active\")} value=\"Active\"></input>\r\n                <input type=\"button\" className={filter === \"Completed\" ? 'active' : ''} onClick={() => onChangeFilter(\"Completed\")} value=\"Completed\"></input>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { React, useState, Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nimport TodoModel from './model/TodoModel';\nimport Header from './components/header/header';\nimport AddNewTodo from './components/addNewTodo/addNewTodo';\nimport ToDoList from './components/toDoList/toDoList';\nimport Actions from './components/actions/actions';\nimport Button from 'react-bootstrap/Button';\n\nimport './App.css';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nfunction App() {\n  const [todoList, setTodoList] = useState([]);\n  const [latestTodoCount, setLatestTodoCount] = useState(0);\n  const [filterBy, setFilterBy] = useState('All');\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState('');\n\n  let activeTodoCount = todoList.filter(e => !e.isCompleted).length;\n\n  let visibilityClassName = todoList.length ? 'show' : 'hide';\n\n  function addNewTodo(e) {\n    let count = latestTodoCount + 1;\n    setLatestTodoCount(count);\n\n    setTodoList(todoList.concat(new TodoModel(count, false, e)));\n  }\n\n  function changeCheckTodoItem(item) {\n    let list = [...todoList];\n    let newList = list.map(listItem => {\n      if (listItem.id === item.id) {\n        let completed = !listItem.isCompleted\n        listItem.isCompleted = completed;\n      }\n      return listItem;\n    });\n    setTodoList(newList);\n\n    console.log(\"appjs/changeCheckTodoItem\", newList);\n  }\n\n  function deleteItem(item) {\n    if (!item.isCompleted) {\n      setItemToDelete(item);\n      openModal();\n    }\n    else {\n      finalDeleteItem(item);\n    }\n  }\n  function finalDeleteItem(item) {\n    let list = [...todoList];\n    let newList = list.filter(listItem => { return listItem.id != item.id });\n    setTodoList(newList);\n\n    console.log(\"appjs/deleteItem\", newList);\n  }\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal(isApproved) {\n    setIsOpen(false);\n    if (isApproved && itemToDelete) {\n      finalDeleteItem(itemToDelete);\n      setItemToDelete('');\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <AddNewTodo onKeyDown={e => addNewTodo(e)}></AddNewTodo>\n      <ToDoList list={filterBy === 'All' ? todoList :\n        filterBy === 'Active' ? todoList.filter(item => !item.isCompleted) : todoList.filter(item => item.isCompleted)}\n        onChange={item => changeCheckTodoItem(item)} onDelete={item => deleteItem(item)} filterBy={filterBy}></ToDoList>\n      <Modal isOpen={modalIsOpen} onRequestClose={closeModal} style={customStyles} contentLabel=\"Example Modal\">\n        <h2 className=\"deleteModalTitle\">This operation will delete an uncompleted task.<br></br> Do you want to continue?</h2>\n        <div className=\"modalBtn\">\n          <Button onClick={() => closeModal(true)}>Yes</Button>\n          <Button onClick={() => closeModal(false)}>Cancel</Button>\n        </div>\n      </Modal>\n      <Actions activeTodosNumber={activeTodoCount} visibilityClassName={visibilityClassName} onClick={(item) => setFilterBy(item)}></Actions>\n    </div >\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}